{"version":3,"sources":["component/Avatar/Avatar.js","component/Button/FollowButton.js","component/Button/VoteButtonGroup.js","utils/style.js","component/Button/CommentButton.js","component/Profile/ProfileHeader.js","utils/ajax.js","utils/config.js","utils/history.js","PrivateRoute.js","services/userServices.js","component/Bar/ActionBar.js","component/Feed/FeedItem.js","component/Feed/FeedList.js","views/Activity/Activity.js","Router.js","utils/theme.js","App.js","serviceWorker.js","index.js"],"names":["Avatar","props","size","src","style","large","width","height","medium","small","FollowButton","followed","onClick","muiBtnProps","color","variant","startIcon","Button","styles","makeStyles","voteButtonLeftMargin","marginLeft","voteButton","padding","activated","border","VoteButtonGroup","vote","onUp","onDown","onCancel","handleVote","val","sty","className","greyText","CommentButton","textStyle","ProfileHeader","username","data","gender","Math","min","intro","img","useState","setFollowed","genderText","label","emoji","role","aria-label","axiosRequest","method","url","options","payload","auth","params","requestConfig","Promise","resolve","reject","axios","then","res","status","catch","err","post","config","apiUrl","process","REACT_APP_API_URL","history","createBrowserHistory","PrivateRoute","isAuthed","setIsAuthed","hasAuthed","setHasAuthed","checkAuth","message","error","msg","localStorage","removeItem","useEffect","callback","userService","Component","component","path","exact","strict","render","to","pathname","state","from","location","ActionBar","setVote","StoryItem","author","action","title","content","FeedList","dataSource","list","useMemo","length","map","feed","idx","key","Activity","value","setValue","feedList","setFeedList","Tabs","indicatorColor","textColor","onChange","ev","newVal","Tab","profileDemoData","BasicRoute","HomeView","LoginView","RegisterView","blueTheme","createMuiTheme","palette","primary","blue","App","ThemeProvider","theme","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.cc9999df.chunk.js","sourcesContent":["import { Avatar as MaterialAvatar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Avatar = (props) => {\n  const { size = 'small' } = props;\n\n  const sizes = {\n    large: { width: '160px', height: '160px' },\n    medium: { width: '68px', height: '68px' },\n    small: {},\n  };\n\n  return (\n    <div>\n      <MaterialAvatar src={props.src} style={{ ...sizes[size] }} />\n    </div>\n  );\n};\n\nAvatar.propTypes = {\n  src: PropTypes.string.isRequired,\n  size: PropTypes.string,\n};\n\nexport default Avatar;\n","import { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst FollowButton = ({ followed, onClick }) => {\n  const muiBtnProps = {\n    color: followed ? 'default' : 'primary',\n    variant: 'contained',\n    startIcon: followed ? <CheckIcon /> : <AddIcon />,\n    onClick,\n  };\n\n  return <Button {...muiBtnProps}>{followed ? '已关注' : '关注'}</Button>;\n};\n\nFollowButton.propTypes = {\n  followed: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default FollowButton;\n","import './VoteButtonGroup.sass';\n\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst styles = makeStyles({\n  voteButtonLeftMargin: {\n    marginLeft: '4px',\n  },\n  voteButton: {\n    padding: '4px 10px',\n  },\n  activated: {\n    border: '1px solid transparent',\n  },\n});\n\nconst VoteButtonGroup = ({ vote = 0, onUp, onDown, onCancel }) => {\n  /**\n   * voteState table\n   * 0 -> no vote\n   * 1 -> up vote\n   * 2 -> down vote\n   */\n  const muiBtnProps = {\n    variant: vote === 0 ? 'outlined' : 'contained',\n    color: 'primary',\n    size: 'small',\n  };\n\n  const handleVote = (val) => {\n    if (vote !== 0) {\n      onCancel();\n    } else {\n      const call = [onUp, onDown];\n      call[val]();\n    }\n  };\n  // console.log(styles().voteButton);\n  const sty = styles();\n\n  return (\n    <>\n      {vote !== 2 && (\n        <Button {...muiBtnProps} startIcon={<KeyboardArrowUpIcon />} onClick={() => handleVote(0)} className={sty.voteButton + ` ${vote === 1 && sty.activated}`}>\n          赞同\n        </Button>\n      )}\n      {vote !== 1 && (\n        <Button {...muiBtnProps} className={sty.voteButtonLeftMargin + ' ' + sty.voteButton + ` ${vote === 2 && sty.activated}`} onClick={() => handleVote(1)} startIcon={<KeyboardArrowDownIcon />}>\n          反对\n        </Button>\n      )}\n    </>\n  );\n};\n\nVoteButtonGroup.propTypes = {\n  vote: PropTypes.number.isRequired,\n  onUp: PropTypes.func.isRequired,\n  onDown: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default VoteButtonGroup;\n","import makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport const style = makeStyles({\n  greyText: {\n    color: '#8590a6',\n  },\n});\n","import { Button } from '@material-ui/core';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport React from 'react';\n\nimport { style } from '../../utils/style';\n\nconst CommentButton = () => {\n  const textStyle = style().greyText;\n  return (\n    <div>\n      <Button startIcon={<ChatBubbleOutlineIcon />} variant=\"text\" className={textStyle}>\n        评论\n      </Button>\n    </div>\n  );\n};\n\nexport default CommentButton;\n","import './ProfileHeader.css';\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport Avatar from '../../component/Avatar/Avatar';\nimport { FollowButton } from '../Button';\n\nconst ProfileHeader = (props) => {\n  const username = props.data.username;\n  const gender = Math.min(props.data.gender, 1); // clamp gender to 0 or 1, the lower bound is not considerred\n  const intro = props.data.intro;\n  const img = props.data.img;\n  const [followed, setFollowed] = useState(false);\n\n  const genderText = [\n    { label: 'male', emoji: '👨' },\n    { label: 'female', emoji: '👩' },\n    { label: '', emoji: '' },\n  ];\n\n  return (\n    <div className={'profile-card card'}>\n      <div className=\"profile-header\">\n        {/* User Avatar */}\n        <div className=\"profile-avatar\">\n          <Avatar size=\"large\" className={'avatar'} src={img} />\n        </div>\n        {/* User Info */}\n        <div className=\"profile-info\">\n          <h1 className=\"user-name\">{username}</h1>\n          <span role=\"img\" aria-label={genderText[gender].label}>\n            {genderText[gender].emoji}\n          </span>\n          {(gender === 0 || gender === 1) && <div className=\"divider\" />}\n          <span className={'profile-detail'}>{intro}</span>\n          <div className=\"profile-footer\">\n            <FollowButton followed={followed} onClick={() => setFollowed(!followed)} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProfileHeader.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default ProfileHeader;\n","import axios from 'axios';\n\nconst axiosRequest = (method, url = '', options = {}) => {\n  const auth = options.auth;\n  const payload = options.payload;\n  const params = options.params;\n  const requestConfig = {\n    method,\n    url,\n    params,\n    data: payload,\n  };\n  if (auth) {\n    // TODO: implement authentication\n  }\n  return new Promise((resolve, reject) =>\n    axios(requestConfig)\n      .then((res) => {\n        if (res.status === 200) {\n          resolve(res);\n        } else {\n          reject(res);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      })\n  );\n};\n\nexport const post = (url, data = {}, auth = false) => axiosRequest('post', url, { payload: data, auth });\n","// API URL config\nconst api = process.env.REACT_APP_API_URL === null ? '' : process.env.REACT_APP_API_URL;\n\nconst config = { apiUrl: api };\n\nexport default config;\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import { message } from 'antd';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport * as userService from './services/userServices';\n\nconst PrivateRoute = (props) => {\n  const [isAuthed, setIsAuthed] = useState(false); // 已经登陆\n  const [hasAuthed, setHasAuthed] = useState(false); // 曾经登陆过\n\n  const checkAuth = (data) => {\n    if (data.status >= 0) {\n      setIsAuthed(true);\n      setHasAuthed(true);\n    } else {\n      message.error(data.msg);\n      localStorage.removeItem('user');\n      setIsAuthed(false);\n      setHasAuthed(true);\n    }\n  };\n\n  useEffect(() => userService.checkSession(checkAuth));\n  const { component: Component, path = '/', exact = false, strict = false } = props;\n\n  // 如果曾经没有登陆过，那么直接返回NULL\n  if (!hasAuthed) {\n    return null;\n  }\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      strict={strict}\n      render={(props) =>\n        isAuthed ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  location: PropTypes.any.isRequired,\n  component: PropTypes.any,\n  path: PropTypes.any,\n  exact: PropTypes.any,\n  strict: PropTypes.any,\n};\n\nexport default PrivateRoute;\n","import { message } from 'antd';\n\nimport { post } from '../utils/ajax';\nimport config from '../utils/config';\nimport { history } from '../utils/history';\n\nexport const login = (data) => {\n  const url = `${config.apiUrl}/login`;\n  const callback = (data) => {\n    if (data.status >= 0) {\n      localStorage.setItem('user', JSON.stringify(data.data));\n      history.push('/');\n      message.success(data.msg);\n    } else {\n      message.error(data.msg);\n    }\n  };\n  post(url, data).then((res) => callback(res));\n};\n\nexport const logout = () => {\n  const url = `${config.apiUrl}/logout`;\n\n  const callback = (data) => {\n    if (data.status >= 0) {\n      localStorage.removeItem('user');\n      history.push('/login');\n      message.success(data.msg);\n    } else {\n      message.error(data.msg);\n    }\n  };\n  post(url, {}).then((res) => callback(res));\n};\n\nexport const checkSession = (callback) => {\n  const url = `${config.apiUrl}/checkSession`;\n  post(url, {}).then((res) => callback(res));\n};\n","import React, { useState } from 'react';\n\nimport { CommentButton, VoteButtonGroup } from '../Button';\n\nconst ActionBar = () => {\n  const [vote, setVote] = useState(0);\n\n  return (\n    <div className=\"feed-item-action\">\n      <VoteButtonGroup vote={vote} onUp={() => setVote(1)} onDown={() => setVote(2)} onCancel={() => setVote(0)} />\n      <div style={{ marginLeft: 'auto' }}>\n        <CommentButton />\n      </div>\n    </div>\n  );\n};\n\nexport default ActionBar;\n","import './FeedItem.sass';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ActionBar } from '../Bar';\n\nconst StoryItem = ({ data }) => {\n  const author = data.author;\n  const action = data.action;\n  const title = data.title;\n  const content = data.content;\n\n  const actions = ['赞同了回答', '提出了问题', '关注了问题'];\n\n  return (\n    <div className=\"story-item-container\">\n      <div className=\"story-item-content\">\n        <div className=\"feed-source\">\n          {author} {actions[action]}\n        </div>\n        <div>\n          <h2 className=\"feed-item-title\">{title}</h2>\n          <p className=\"feed-item-content\">{content}</p>\n          <div>\n            <ActionBar />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStoryItem.propTypes = {\n  data: PropTypes.any.isRequired,\n};\n\nexport default StoryItem;\n","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { StoryItem } from './index';\n\nconst FeedList = ({ dataSource }) => {\n  const list = useMemo(() => [...dataSource], [dataSource]);\n  return <>{list && list.length && list.length > 0 && list.map((feed, idx) => <StoryItem data={feed} key={idx} />)}</>;\n};\n\nFeedList.propTypes = {\n  dataSource: PropTypes.array.isRequired,\n};\n\nexport default FeedList;\n","import './Activity.css';\n\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport React, { useEffect, useState } from 'react';\n\nimport { FeedList } from '../../component/Feed';\nimport ProfileHeader from '../../component/Profile/ProfileHeader';\n\nconst Activity = () => {\n  const [value, setValue] = useState(0);\n  const [feedList, setFeedList] = useState([]);\n  const handleChange = (ev, newVal) => setValue(newVal);\n\n  useEffect(() => {\n    setFeedList([\n      { author: 'Author', action: 0, title: '什么是 QAQ?', content: '知乎，不行！\\nQAQ 彳亍！\\n' },\n      { author: 'undefined!', action: 1, title: '宇宙的终极答案是什么？', content: '4 2\\n' },\n    ]);\n  }, []);\n\n  return (\n    <div>\n      <ProfileHeader\n        data={{\n          username: 'QAQ 小编',\n          gender: 1,\n          img: 'https://avatars1.githubusercontent.com/u/71007591',\n          intro: '哦！我向上帝发誓，我什么也不知道。我打赌，我会把QAQ问到倒闭！看在玛丽亚的份上，请回答我的问题吧！',\n        }}\n      />\n      <div className=\"profile-main\">\n        <div className=\"card profile-act\">\n          <Tabs value={value} indicatorColor=\"primary\" textColor=\"primary\" onChange={handleChange} aria-label=\"disabled tabs example\">\n            <Tab label=\"动态\" style={{ width: '10px' }} />\n            <Tab label=\"回答\" />\n            <Tab label=\"问题\" />\n            <Tab label=\"关注\" />\n          </Tabs>\n          <FeedList dataSource={feedList} />\n        </div>\n        <div className=\"profile-side\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <div className=\"card-header-text\">我的 QAQ</div>\n            </div>\n            <div className=\"side-stat-detail\">\n              <div className=\"side-stat-detail-item\">\n                <div className=\"side-icon\">\n                  <PersonIcon />\n                </div>\n                <span>关注了 114 个用户</span>\n              </div>\n              <div className=\"side-stat-detail-item\">\n                <div className=\"side-icon\">\n                  <VisibilityIcon />\n                </div>\n                <span>关注了 514 个问题</span>\n              </div>\n              <div className=\"side-stat-detail-item\">\n                <div className=\"side-icon\">\n                  <ThumbUpIcon />\n                </div>\n                <span>获得了 233 个赞同</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Activity;\n","import React from 'react';\nimport { Link, Redirect, Route, Router, Switch } from 'react-router-dom';\n\nimport ProfileHeader from './component/Profile/ProfileHeader';\nimport PrivateRoute from './PrivateRoute';\nimport { history } from './utils/history';\nimport Activity from './views/Activity/Activity';\nimport HomeView from './views/homeView/HomeView';\nimport LoginView from './views/loginView/LoginView';\nimport RegisterView from './views/registerView/RegisterView';\n\nconst profileDemoData = {\n  username: 'QAQ 小编',\n  gender: 1,\n  img: 'https://avatars1.githubusercontent.com/u/71007591',\n  intro: '哦！我向上帝发誓，我什么也不知道。我打赌，我会把QAQ问到倒闭！看在玛丽亚的份上，请回答我的问题吧！',\n};\n\nconst BasicRoute = () => (\n  <>\n    <Router history={history}>\n      <div>\n        This part is for development preview purpose when the homepage is not fully implemented. Remove this section after the HomeView is done.\n        <Link to=\"/people\">用户动态(Avatar, Follow Button, Profile Header)</Link>\n        <Link to=\"/dev/profileHeader\">profile header (preview only)</Link>\n      </div>\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={HomeView} />\n        <Route path=\"/people\">\n          <Activity />\n        </Route>\n        <Route path=\"/dev/profileHeader\">\n          <ProfileHeader data={profileDemoData} />\n        </Route>\n        <Route exact path=\"/login\" component={LoginView} />\n        <Route exact path=\"/register\" component={RegisterView} />\n        <Redirect from=\"/*\" to=\"/\" />\n      </Switch>\n    </Router>\n  </>\n);\n\nexport default BasicRoute;\n","import blue from '@material-ui/core/colors/blue';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const blueTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n","import './App.css';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport BasicRoute from './Router';\nimport { blueTheme } from './utils/theme';\n\nconst App = () => (\n  <div className=\"App\">\n    <ThemeProvider theme={blueTheme}>\n      <BasicRoute />\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}